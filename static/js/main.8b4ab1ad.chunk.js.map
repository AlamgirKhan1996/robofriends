{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","Components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","_useState","useState","_useState2","Object","slicedToArray","setrobots","_useState3","_useState4","setsearchfield","useEffect","fetch","then","Response","json","users","filterdRobots","filter","robot","toLowerCase","includes","length","Components_SearchBox","event","target","value","Components_Scroll","Components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Containers_App","document","getElementById"],"mappings":"6KAaeA,EAXD,SAAHC,GAAwB,IAAnBC,EAAID,EAAJC,KAAKC,EAAKF,EAALE,MAAMC,EAAEH,EAAFG,GACvB,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BP,EAAE,cACjDC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,SAAIJ,MCUDS,EAhBE,SAAHX,GAAmB,IAAbY,EAAMZ,EAANY,OAClB,OACER,EAAAC,EAAAC,cAAA,WACGM,EAAOC,IAAI,SAACC,EAAMC,GACjB,OACEX,EAAAC,EAAAC,cAACU,EAAI,CACHC,IAAKF,EACLZ,GAAIS,EAAOG,GAAGZ,GACdF,KAAMW,EAAOG,GAAGd,KAChBC,MAAOU,EAAOG,GAAGb,YCEdgB,EAVG,SAAHlB,GAAgBA,EAAXmB,YAA8B,IAAlBC,EAAYpB,EAAZoB,aAC5B,OAAOhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAClBH,EAAAC,EAAAC,cAAA,SACAC,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCGHI,SAVA,SAACC,GACd,OACErB,EAAAC,EAAAC,cAAA,OACEoB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAE/DJ,EAAMK,YC6BEC,MA9Bf,WAAe,IAAAC,EACeC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAjCpB,EAAMsB,EAAA,GAAEG,EAASH,EAAA,GAAAI,EACcL,mBAAS,IAAGM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAA3CnB,EAAWoB,EAAA,GAAEC,EAAcD,EAAA,GAElCE,oBAAU,WACRC,MAAM,8CACHC,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACG,GAAK,OAAKT,EAAUS,MAC5B,IAEH,IAIMC,EAAgBnC,EAAOoC,OAAO,SAACC,GACnC,OAAOA,EAAMhD,KAAKiD,cAAcC,SAAShC,EAAY+B,iBAEvD,OAAQtC,EAAOwC,OAGbhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBH,EAAAC,EAAAC,cAAC+C,EAAS,CAACjC,aAZQ,SAACkC,GACtBd,EAAec,EAAMC,OAAOC,UAY1BpD,EAAAC,EAAAC,cAACmD,EAAM,KACLrD,EAAAC,EAAAC,cAACoD,EAAQ,CAAC9C,OAAQmC,MANtB3C,EAAAC,EAAAC,cAAA,UAAI,YCZOqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAApB,KAAAmB,EAAAE,KAAA,UAAqBrB,KAAK,SAAA3C,GAAiD,IAA9CiE,EAAMjE,EAANiE,OAAQC,EAAMlE,EAANkE,OAAQC,EAAMnE,EAANmE,OAAQC,EAAMpE,EAANoE,OAAQC,EAAOrE,EAAPqE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCAdU,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAG,MAAKC,SAASC,eAAe,SAKjDf","file":"static/js/main.8b4ab1ad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n const Card = ({name,email,id}) => {\r\n    return(\r\n    <div className=\"tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n        <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`}/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return <div className=\"pa2\">\r\n        <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\" \r\n        type='search' \r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}/>\r\n        </div>\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{ overflow: \"scroll\", border: \"1px solid black\", height: \"800px\" }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CardList from \"../Components/CardList\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../Components/Scroll\";\r\n\r\nfunction App() {\r\n  const [robots, setrobots] = useState([]);\r\n  const [searchfield, setsearchfield] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((Response) => Response.json())\r\n      .then((users) => setrobots(users));\r\n  }, []);\r\n\r\n  const onSearchChange = (event) => {\r\n    setsearchfield(event.target.value);\r\n  };\r\n\r\n  const filterdRobots = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n  });\r\n  return !robots.length ? (\r\n    <h1>Loading</h1>\r\n  ) : (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">RoboFriends</h1>\r\n      <SearchBox searchChange={onSearchChange} />\r\n      <Scroll>\r\n        <CardList robots={filterdRobots} />\r\n      </Scroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"tachyons\";\nimport App from \"./Containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}